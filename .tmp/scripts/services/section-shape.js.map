{"version":3,"sources":["services/section-shape.js"],"names":["angular","module","factory","webdanRef","$firebaseArray","$firebaseObject","$firebaseUtils","ref","child","sectionShapes","SectionShape","selectOptions","query","copy","remove","sectionShape","origSectionShape","$getRecord","$id","$remove","catch","err","save","plainSectionShape","toJSON","extend","$save","add","$add","isEmpty","name","trim","forEach","renderName","instance","td","row","col","prop","sectionShapeNo","cellProperties","$resolved","shapes","filter","shape","no","length","element","html","renderProp","sectionShapeId"],"mappings":"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","file":"section-shape.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc service\r\n * @name webdan.SectionShape\r\n * @description\r\n * # SectionShape\r\n * Factory in the webdan.\r\n */\r\nangular.module('webdan')\r\n  .factory('SectionShape', ['webdanRef', '$firebaseArray', '$firebaseObject', '$firebaseUtils',\r\n    function(webdanRef, $firebaseArray, $firebaseObject, $firebaseUtils) {\r\n\r\n      var ref = webdanRef.child('sectionShapes');\r\n      var sectionShapes = $firebaseArray(ref);\r\n      var SectionShape = {};\r\n      let selectOptions;\r\n\r\n      SectionShape.query = function(copy) {\r\n        return sectionShapes;\r\n      }\r\n\r\n      SectionShape.remove = function(sectionShape) {\r\n        let origSectionShape = sectionShapes.$getRecord(sectionShape.$id);\r\n        return sectionShapes.$remove(origSectionShape).catch(function(err) {\r\n          throw err;\r\n        });\r\n      }\r\n\r\n      SectionShape.save = function(sectionShape) {\r\n        let origSectionShape = sectionShapes.$getRecord(sectionShape.$id);\r\n        let plainSectionShape = $firebaseUtils.toJSON(sectionShape);\r\n        angular.extend(origSectionShape, plainSectionShape);\r\n        return sectionShapes.$save(origSectionShape).catch(function(err) {\r\n          throw err;\r\n        });\r\n      }\r\n\r\n      SectionShape.add = function(sectionShape) {\r\n        return sectionShapes.$add(sectionShape).catch(function(err) {\r\n          throw err;\r\n        });\r\n      }\r\n\r\n      SectionShape.isEmpty = function(sectionShape) {\r\n        return !sectionShape.name.trim();\r\n      }\r\n\r\n      SectionShape.selectOptions = function() {\r\n        if (!selectOptions) {\r\n          selectOptions = {};\r\n          sectionShapes.forEach(function(sectionShape) {\r\n            selectOptions[sectionShape.$id] = sectionShape.name;\r\n          });\r\n        }\r\n        return selectOptions;\r\n      }\r\n\r\n      SectionShape.renderName = function(instance, td, row, col, prop, sectionShapeNo, cellProperties) {\r\n        if (sectionShapes.$resolved) {\r\n          let shapes = sectionShapes.filter(function(shape) {\r\n            return (shape.no == sectionShapeNo);\r\n          });\r\n          if (shapes.length) {\r\n            angular.element(td).html(shapes[0].name);\r\n          }\r\n        }\r\n        return td;\r\n      }\r\n\r\n      function renderProp(td, sectionShapeId, prop) {\r\n        let sectionShape = sectionShapes.$getRecord(sectionShapeId);\r\n        if (sectionShape) {\r\n          angular.element(td).html(sectionShape[prop] || '');\r\n        }\r\n        return td;\r\n      }\r\n\r\n      return SectionShape;\r\n    }\r\n  ]);\r\n"]}