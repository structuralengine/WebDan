{"version":3,"sources":["controllers/words/index.js"],"names":["angular","module","controller","$scope","$log","Page","Word","ctrl","pages","query","settings","allowInvalid","colHeaders","colWidths","columns","data","type","validator","validators","en","var","text","contextMenu","afterChange","changes","source","forEach","change","idx","prop","oldVal","newVal","word","words","$dirty","e","error","beforeRemoveRow","index","amount","logicalRows","$id","remove","select","page","$loaded","origWords","copy","isDirty","some","save","isEmpty","indexOf","then","ref","splice","add"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name webdan.controller:WordsIndexCtrl\r\n * @description\r\n * # WordsIndexCtrl\r\n * Controller of the webdan\r\n */\r\nangular.module('webdan')\r\n  .controller('WordsIndexCtrl', ['$scope', '$log', 'Page', 'Word',\r\n    function($scope, $log, Page, Word) {\r\n      var ctrl = this;\r\n\r\n      ctrl.pages = Page.query();\r\n\r\n      ctrl.settings = {\r\n        allowInvalid: false,\r\n        colHeaders: [\r\n          '番号',\r\n          '日本語',\r\n          '英語',\r\n          '変数 as text',\r\n          '変数 as html'\r\n        ],\r\n        colWidths: [50, 200, 200, 100, 200],\r\n        columns: [\r\n          {data: 'pointer', type: 'numeric'},\r\n          {data: 'ja'},\r\n          {data: 'en', validator: Word.validators.en},\r\n          {data: 'var.text', validator: Word.validators.var.text},\r\n          {data: 'var.html'},\r\n        ],\r\n        contextMenu: ['remove_row'],\r\n        afterChange: function(changes, source) {\r\n          (changes || []).forEach(function(change) {\r\n            try {\r\n              let [idx, prop, oldVal, newVal] = change;\r\n              let word = ctrl.words[idx];\r\n              if (word) {\r\n                word.$dirty = true;\r\n              }\r\n            }\r\n            catch (e) {\r\n              $log.error(e);\r\n            }\r\n          });\r\n        },\r\n        beforeRemoveRow: function(index, amount, logicalRows) {\r\n          logicalRows.forEach(function(idx) {\r\n            let word = ctrl.words[idx];\r\n            if (word && word.$id) {\r\n              Word.remove(word);\r\n            }\r\n          });\r\n        },\r\n      };\r\n\r\n      ctrl.select = function(page) {\r\n        ctrl.page = page;\r\n        Word.query(page.$id).$loaded(function(words) {\r\n          ctrl.origWords = words;\r\n          ctrl.words = angular.copy(words);\r\n        });\r\n      }\r\n\r\n      ctrl.isDirty = function() {\r\n        return (ctrl.words || []).some(function(word) {\r\n          return !!word.$dirty;\r\n        });\r\n      };\r\n\r\n      ctrl.save = function() {\r\n        return (ctrl.words || []).forEach(function(word) {\r\n          if (word.$dirty) {\r\n            try {\r\n              if (Word.isEmpty(word)) {\r\n                if (word.$id) {\r\n                  let idx = ctrl.words.indexOf(word);\r\n                  Word.remove(word).then(function(ref) {\r\n                    ctrl.words.splice(idx, 1);\r\n                  });\r\n                }\r\n              } else {\r\n                if (word.$id) {\r\n                  Word.save(word).then(function(ref) {\r\n                    word.$dirty = false;\r\n                  });\r\n                } else {\r\n                  word.page = ctrl.page.$id;\r\n                  Word.add(word).then(function(ref) {\r\n                    word.$dirty = false;\r\n                  });\r\n                }\r\n              }\r\n            } catch (e) {\r\n              $log.error(e);\r\n            }\r\n          }\r\n        })\r\n      };\r\n\r\n    }\r\n  ]);\r\n"]}