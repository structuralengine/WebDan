{"version":3,"sources":["controllers/section-shapes/index.js"],"names":["angular","module","controller","$scope","$log","SectionShape","ctrl","origSectionShapes","sectionShapes","query","$loaded","copy","settings","minSpareRows","colHeaders","rowHeaders","data","type","changes","source","forEach","change","idx","prop","oldVal","newVal","sectionShape","$dirty","isDirty","some","save","isEmpty","indexOf","$id","removeSectionShape","remove","then","ref","resetDirty","add","key","e","error","splice"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name webdan.controller:SectionShapesIndexCtrl\r\n * @description\r\n * # SectionShapesIndexCtrl\r\n * Controller of the webdan\r\n */\r\nangular.module('webdan')\r\n  .controller('SectionShapesIndexCtrl', ['$scope', '$log', 'SectionShape',\r\n    function($scope, $log, SectionShape) {\r\n      var ctrl = this;\r\n      var origSectionShapes;\r\n\r\n      ctrl.sectionShapes = [];\r\n\r\n      SectionShape.query().$loaded(function(sectionShapes) {\r\n        origSectionShapes = sectionShapes;\r\n        ctrl.sectionShapes = angular.copy(sectionShapes);\r\n      });\r\n\r\n      ctrl.settings = {\r\n        minSpareRows: 1,\r\n        colHeaders: true,\r\n        rowHeaders: false,\r\n        colHeaders: [\r\n          'No',\r\n          '形状名'\r\n        ],\r\n        columns: [\r\n          {data: 'no', type: 'numeric'},\r\n          {data: 'name'}\r\n        ],\r\n        afterChange: function(changes, source) {\r\n          (changes || []).forEach(function(change) {\r\n            let [idx, prop, oldVal, newVal] = change;\r\n            let sectionShape = ctrl.sectionShapes[idx];\r\n            if (sectionShape) {\r\n              sectionShape.$dirty = true;\r\n            }\r\n          })\r\n        }\r\n      };\r\n\r\n      ctrl.isDirty = function() {\r\n        return ctrl.sectionShapes.some(function(sectionShape) {\r\n          return !!sectionShape.$dirty;\r\n        })\r\n      };\r\n\r\n      ctrl.save = function() {\r\n        ctrl.sectionShapes.forEach(function(sectionShape) {\r\n          if (!sectionShape.$dirty) {\r\n            return;\r\n          }\r\n\r\n          try {\r\n            if (SectionShape.isEmpty(sectionShape)) {\r\n              let idx = ctrl.sectionShapes.indexOf(sectionShape);\r\n              if (!sectionShape.$id) {\r\n                removeSectionShape(idx);\r\n              } else {\r\n                SectionShape.remove(sectionShape).then(function(ref) {\r\n                  removeSectionShape(idx);\r\n                });\r\n              }\r\n            } else {\r\n              if (sectionShape.$id) {\r\n                SectionShape.save(sectionShape).then(function(ref) {\r\n                  resetDirty(sectionShape);\r\n                });\r\n              } else {\r\n                SectionShape.add(sectionShape).then(function(ref) {\r\n                  sectionShape.$id = ref.key;\r\n                  resetDirty(sectionShape);\r\n                });\r\n              }\r\n            }\r\n          } catch (e) {\r\n            $log.error(e);\r\n          }\r\n        })\r\n      }\r\n\r\n      function removeSectionShape(idx) {\r\n        ctrl.sectionShapes.splice(idx, 1);\r\n      }\r\n\r\n      function resetDirty(sectionShape) {\r\n        sectionShape.$dirty = false;\r\n      }\r\n    }\r\n  ]);\r\n"]}