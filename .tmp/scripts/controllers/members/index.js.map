{"version":3,"sources":["controllers/members/index.js"],"names":["angular","module","controller","$scope","$log","Member","ctrl","origMembers","members","query","$loaded","copy","settings","minSpareRows","colHeaders","rowHeaders","data","changes","source","forEach","change","idx","prop","oldVal","newVal","member","$dirty","isDirty","some","save","isEmpty","indexOf","$id","removeMember","remove","then","ref","resetDirty","add","key","e","error","splice"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;AAOAA,QAAQC,MAAR,CAAe,QAAf,EACGC,UADH,CACc,kBADd,EACkC,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAC9B,UAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;AAAA;;AAC7B,MAAIC,OAAO,IAAX;AACA,MAAIC,WAAJ;;AAEAD,OAAKE,OAAL,GAAe,EAAf;;AAEAH,SAAOI,KAAP,GAAeC,OAAf,CAAuB,UAASF,OAAT,EAAkB;AACvCD,kBAAcC,OAAd;AACAF,SAAKE,OAAL,GAAeR,QAAQW,IAAR,CAAaH,OAAb,CAAf;AACD,GAHD;;AAKAF,OAAKM,QAAL;AACEC,kBAAc,CADhB;AAEEC,gBAAY,IAFd;AAGEC,gBAAY;AAHd,mDAIc,CACV,UADU,EAEV,KAFU,CAJd,8CAQW,CACP,EAACC,MAAM,MAAP,EADO,EAEP,EAACA,MAAM,QAAP,EAFO,CARX,kDAYe,qBAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACrC,KAACD,WAAW,EAAZ,EAAgBE,OAAhB,CAAwB,UAASC,MAAT,EAAiB;AAAA,mCACLA,MADK;AAAA,UAClCC,GADkC;AAAA,UAC7BC,IAD6B;AAAA,UACvBC,MADuB;AAAA,UACfC,MADe;;AAEvC,UAAIC,SAASnB,KAAKE,OAAL,CAAaa,GAAb,CAAb;AACA,UAAII,MAAJ,EAAY;AACVA,eAAOC,MAAP,GAAgB,IAAhB;AACD;AACF,KAND;AAOD,GApBH;;AAuBApB,OAAKqB,OAAL,GAAe,YAAW;AACxB,WAAOrB,KAAKE,OAAL,CAAaoB,IAAb,CAAkB,UAASH,MAAT,EAAiB;AACxC,aAAO,CAAC,CAACA,OAAOC,MAAhB;AACD,KAFM,CAAP;AAGD,GAJD;;AAMApB,OAAKuB,IAAL,GAAY,YAAW;AACrBvB,SAAKE,OAAL,CAAaW,OAAb,CAAqB,UAASM,MAAT,EAAiB;AACpC,UAAI,CAACA,OAAOC,MAAZ,EAAoB;AAClB;AACD;;AAED,UAAI;AACF,YAAIrB,OAAOyB,OAAP,CAAeL,MAAf,CAAJ,EAA4B;AAC1B,cAAIJ,MAAMf,KAAKE,OAAL,CAAauB,OAAb,CAAqBN,MAArB,CAAV;AACA,cAAI,CAACA,OAAOO,GAAZ,EAAiB;AACfC,yBAAaZ,GAAb;AACD,WAFD,MAEO;AACLhB,mBAAO6B,MAAP,CAAcT,MAAd,EAAsBU,IAAtB,CAA2B,UAASC,GAAT,EAAc;AACvCH,2BAAaZ,GAAb;AACD,aAFD;AAGD;AACF,SATD,MASO;AACL,cAAII,OAAOO,GAAX,EAAgB;AACd3B,mBAAOwB,IAAP,CAAYJ,MAAZ,EAAoBU,IAApB,CAAyB,UAASC,GAAT,EAAc;AACrCC,yBAAWZ,MAAX;AACD,aAFD;AAGD,WAJD,MAIO;AACLpB,mBAAOiC,GAAP,CAAWb,MAAX,EAAmBU,IAAnB,CAAwB,UAASC,GAAT,EAAc;AACpCX,qBAAOO,GAAP,GAAaI,IAAIG,GAAjB;AACAF,yBAAWZ,MAAX;AACD,aAHD;AAID;AACF;AACF,OAtBD,CAsBE,OAAOe,CAAP,EAAU;AACVpC,aAAKqC,KAAL,CAAWD,CAAX;AACD;AACF,KA9BD;AA+BD,GAhCD;;AAkCA,WAASP,YAAT,CAAsBZ,GAAtB,EAA2B;AACzBf,SAAKE,OAAL,CAAakC,MAAb,CAAoBrB,GAApB,EAAyB,CAAzB;AACD;;AAED,WAASgB,UAAT,CAAoBZ,MAApB,EAA4B;AAC1BA,WAAOC,MAAP,GAAgB,KAAhB;AACD;AACF,CAlF6B,CADlC","file":"index.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name webdan.controller:MembersIndexCtrl\r\n * @description\r\n * # MembersIndexCtrl\r\n * Controller of the webdan\r\n */\r\nangular.module('webdan')\r\n  .controller('MembersIndexCtrl', ['$scope', '$log', 'Member',\r\n    function($scope, $log, Member) {\r\n      var ctrl = this;\r\n      var origMembers;\r\n\r\n      ctrl.members = [];\r\n\r\n      Member.query().$loaded(function(members) {\r\n        origMembers = members;\r\n        ctrl.members = angular.copy(members);\r\n      });\r\n\r\n      ctrl.settings = {\r\n        minSpareRows: 1,\r\n        colHeaders: true,\r\n        rowHeaders: true,\r\n        colHeaders: [\r\n          'グループ No.',\r\n          '部材名'\r\n        ],\r\n        columns: [\r\n          {data: 'g_no'},\r\n          {data: 'g_name'}\r\n        ],\r\n        afterChange: function(changes, source) {\r\n          (changes || []).forEach(function(change) {\r\n            let [idx, prop, oldVal, newVal] = change;\r\n            let member = ctrl.members[idx];\r\n            if (member) {\r\n              member.$dirty = true;\r\n            }\r\n          })\r\n        }\r\n      };\r\n\r\n      ctrl.isDirty = function() {\r\n        return ctrl.members.some(function(member) {\r\n          return !!member.$dirty;\r\n        })\r\n      };\r\n\r\n      ctrl.save = function() {\r\n        ctrl.members.forEach(function(member) {\r\n          if (!member.$dirty) {\r\n            return;\r\n          }\r\n\r\n          try {\r\n            if (Member.isEmpty(member)) {\r\n              let idx = ctrl.members.indexOf(member);\r\n              if (!member.$id) {\r\n                removeMember(idx);\r\n              } else {\r\n                Member.remove(member).then(function(ref) {\r\n                  removeMember(idx);\r\n                });\r\n              }\r\n            } else {\r\n              if (member.$id) {\r\n                Member.save(member).then(function(ref) {\r\n                  resetDirty(member);\r\n                });\r\n              } else {\r\n                Member.add(member).then(function(ref) {\r\n                  member.$id = ref.key;\r\n                  resetDirty(member);\r\n                });\r\n              }\r\n            }\r\n          } catch (e) {\r\n            $log.error(e);\r\n          }\r\n        })\r\n      }\r\n\r\n      function removeMember(idx) {\r\n        ctrl.members.splice(idx, 1);\r\n      }\r\n\r\n      function resetDirty(member) {\r\n        member.$dirty = false;\r\n      }\r\n    }\r\n  ]);\r\n"]}