{"version":3,"sources":["controllers/conditions/index.js"],"names":["angular","module","controller","$scope","$log","Condition","ctrl","origConditions","conditions","query","$loaded","copy","settings","minSpareRows","colHeaders","rowHeaders","data","changes","source","forEach","change","idx","prop","oldVal","newVal","condition","$dirty","isDirty","some","save","isEmpty","indexOf","$id","removeCondition","remove","then","ref","resetDirty","add","key","e","error","splice"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;AAOAA,QAAQC,MAAR,CAAe,QAAf,EACGC,UADH,CACc,qBADd,EACqC,CAAC,QAAD,EAAW,MAAX,EAAmB,WAAnB,EACjC,UAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkC;AAAA;;AAChC,MAAIC,OAAO,IAAX;AACA,MAAIC,cAAJ;;AAEAD,OAAKE,UAAL,GAAkB,EAAlB;;AAEAH,YAAUI,KAAV,GAAkBC,OAAlB,CAA0B,UAASF,UAAT,EAAqB;AAC7CD,qBAAiBC,UAAjB;AACAF,SAAKE,UAAL,GAAkBR,QAAQW,IAAR,CAAaH,UAAb,CAAlB;AACD,GAHD;;AAKAF,OAAKM,QAAL;AACEC,kBAAc,CADhB;AAEEC,gBAAY,IAFd;AAGEC,gBAAY;AAHd,mDAIc,CAAC,KAAD,CAJd,8CAKW,CAAC,EAACC,MAAM,MAAP,EAAD,CALX,kDAMe,qBAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACrC,KAACD,WAAW,EAAZ,EAAgBE,OAAhB,CAAwB,UAASC,MAAT,EAAiB;AAAA,mCACLA,MADK;AAAA,UAClCC,GADkC;AAAA,UAC7BC,IAD6B;AAAA,UACvBC,MADuB;AAAA,UACfC,MADe;;AAEvC,UAAIC,YAAYnB,KAAKE,UAAL,CAAgBa,GAAhB,CAAhB;AACA,UAAII,SAAJ,EAAe;AACbA,kBAAUC,MAAV,GAAmB,IAAnB;AACD;AACF,KAND;AAOD,GAdH;;AAiBApB,OAAKqB,OAAL,GAAe,YAAW;AACxB,WAAOrB,KAAKE,UAAL,CAAgBoB,IAAhB,CAAqB,UAASH,SAAT,EAAoB;AAC9C,aAAO,CAAC,CAACA,UAAUC,MAAnB;AACD,KAFM,CAAP;AAGD,GAJD;;AAMApB,OAAKuB,IAAL,GAAY,YAAW;AACrBvB,SAAKE,UAAL,CAAgBW,OAAhB,CAAwB,UAASM,SAAT,EAAoB;AAC1C,UAAI,CAACA,UAAUC,MAAf,EAAuB;AACrB;AACD;;AAED,UAAI;AACF,YAAIrB,UAAUyB,OAAV,CAAkBL,SAAlB,CAAJ,EAAkC;AAChC,cAAIJ,MAAMf,KAAKE,UAAL,CAAgBuB,OAAhB,CAAwBN,SAAxB,CAAV;AACA,cAAI,CAACA,UAAUO,GAAf,EAAoB;AAClBC,4BAAgBZ,GAAhB;AACD,WAFD,MAEO;AACLhB,sBAAU6B,MAAV,CAAiBT,SAAjB,EAA4BU,IAA5B,CAAiC,UAASC,GAAT,EAAc;AAC7CH,8BAAgBZ,GAAhB;AACD,aAFD;AAGD;AACF,SATD,MASO;AACL,cAAII,UAAUO,GAAd,EAAmB;AACjB3B,sBAAUwB,IAAV,CAAeJ,SAAf,EAA0BU,IAA1B,CAA+B,UAASC,GAAT,EAAc;AAC3CC,yBAAWZ,SAAX;AACD,aAFD;AAGD,WAJD,MAIO;AACLpB,sBAAUiC,GAAV,CAAcb,SAAd,EAAyBU,IAAzB,CAA8B,UAASC,GAAT,EAAc;AAC1CX,wBAAUO,GAAV,GAAgBI,IAAIG,GAApB;AACAF,yBAAWZ,SAAX;AACD,aAHD;AAID;AACF;AACF,OAtBD,CAsBE,OAAOe,CAAP,EAAU;AACVpC,aAAKqC,KAAL,CAAWD,CAAX;AACD;AACF,KA9BD;AA+BD,GAhCD;;AAkCA,WAASP,eAAT,CAAyBZ,GAAzB,EAA8B;AAC5Bf,SAAKE,UAAL,CAAgBkC,MAAhB,CAAuBrB,GAAvB,EAA4B,CAA5B;AACD;;AAED,WAASgB,UAAT,CAAoBZ,SAApB,EAA+B;AAC7BA,cAAUC,MAAV,GAAmB,KAAnB;AACD;AACF,CA5EgC,CADrC","file":"index.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name webdan.controller:ConditionsIndexCtrl\r\n * @description\r\n * # ConditionsIndexCtrl\r\n * Controller of the webdan\r\n */\r\nangular.module('webdan')\r\n  .controller('ConditionsIndexCtrl', ['$scope', '$log', 'Condition',\r\n    function($scope, $log, Condition) {\r\n      var ctrl = this;\r\n      var origConditions;\r\n\r\n      ctrl.conditions = [];\r\n\r\n      Condition.query().$loaded(function(conditions) {\r\n        origConditions = conditions;\r\n        ctrl.conditions = angular.copy(conditions);\r\n      });\r\n\r\n      ctrl.settings = {\r\n        minSpareRows: 1,\r\n        colHeaders: true,\r\n        rowHeaders: true,\r\n        colHeaders: ['部材名'],\r\n        columns: [{data: 'name'}],\r\n        afterChange: function(changes, source) {\r\n          (changes || []).forEach(function(change) {\r\n            let [idx, prop, oldVal, newVal] = change;\r\n            let condition = ctrl.conditions[idx];\r\n            if (condition) {\r\n              condition.$dirty = true;\r\n            }\r\n          })\r\n        }\r\n      };\r\n\r\n      ctrl.isDirty = function() {\r\n        return ctrl.conditions.some(function(condition) {\r\n          return !!condition.$dirty;\r\n        })\r\n      };\r\n\r\n      ctrl.save = function() {\r\n        ctrl.conditions.forEach(function(condition) {\r\n          if (!condition.$dirty) {\r\n            return;\r\n          }\r\n\r\n          try {\r\n            if (Condition.isEmpty(condition)) {\r\n              let idx = ctrl.conditions.indexOf(condition);\r\n              if (!condition.$id) {\r\n                removeCondition(idx);\r\n              } else {\r\n                Condition.remove(condition).then(function(ref) {\r\n                  removeCondition(idx);\r\n                });\r\n              }\r\n            } else {\r\n              if (condition.$id) {\r\n                Condition.save(condition).then(function(ref) {\r\n                  resetDirty(condition);\r\n                });\r\n              } else {\r\n                Condition.add(condition).then(function(ref) {\r\n                  condition.$id = ref.key;\r\n                  resetDirty(condition);\r\n                });\r\n              }\r\n            }\r\n          } catch (e) {\r\n            $log.error(e);\r\n          }\r\n        })\r\n      }\r\n\r\n      function removeCondition(idx) {\r\n        ctrl.conditions.splice(idx, 1);\r\n      }\r\n\r\n      function resetDirty(condition) {\r\n        condition.$dirty = false;\r\n      }\r\n    }\r\n  ]);\r\n"]}