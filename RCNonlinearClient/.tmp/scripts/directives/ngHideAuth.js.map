{"version":3,"sources":["directives/ngHideAuth.js"],"names":["angular","module","directive","Auth","$timeout","restrict","link","scope","el","addClass","update","toggleClass","$getAuth","$onAuthStateChanged"],"mappings":";;AACA;;;;;;;;AAQAA,QAAQC,MAAR,CAAe,QAAf,EACGC,SADH,CACa,YADb,EAC2B,CAAC,MAAD,EAAS,UAAT,EAAqB,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AACtE;;AAEA,SAAO;AACLC,cAAU,GADL;AAELC,UAAM,cAASC,KAAT,EAAgBC,EAAhB,EAAoB;AACxBA,SAAGC,QAAH,CAAY,UAAZ,EADwB,CACC;AACzB,eAASC,MAAT,GAAkB;AAChB;AACA;AACAN,iBAAS,YAAY;AACnBI,aAAGG,WAAH,CAAe,UAAf,EAA2B,CAAC,CAACR,KAAKS,QAAL,EAA7B;AACD,SAFD,EAEG,CAFH;AAGD;;AAEDT,WAAKU,mBAAL,CAAyBH,MAAzB;AACAA;AACD;AAdI,GAAP;AAgBD,CAnBwB,CAD3B","file":"ngHideAuth.js","sourcesContent":["\r\n/**\r\n * @ngdoc function\r\n * @name webdan.directive:ngHideAuth\r\n * @description\r\n * # ngHideAuthDirective\r\n * A directive that shows elements only when user is logged out. It also waits for Auth\r\n * to be initialized so there is no initial flashing of incorrect state.\r\n */\r\nangular.module('webdan')\r\n  .directive('ngHideAuth', ['Auth', '$timeout', function (Auth, $timeout) {\r\n    'use strict';\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function(scope, el) {\r\n        el.addClass('ng-cloak'); // hide until we process it\r\n        function update() {\r\n          // sometimes if ngCloak exists on same element, they argue, so make sure that\r\n          // this one always runs last for reliability\r\n          $timeout(function () {\r\n            el.toggleClass('ng-cloak', !!Auth.$getAuth());\r\n          }, 0);\r\n        }\r\n\r\n        Auth.$onAuthStateChanged(update);\r\n        update();\r\n      }\r\n    };\r\n  }]);\r\n"]}