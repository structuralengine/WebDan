{"version":3,"sources":["services/word.js"],"names":["angular","module","factory","webdanRef","$firebaseArray","$firebaseObject","$firebaseUtils","ref","child","words","Word","validators","query","pageKey","orderByChild","equalTo","add","word","$add","then","$id","key","catch","err","save","origWord","$getRecord","plainWord","toJSON","extend","$save","update","prop","val","path","replace","propRef","obj","$value","remove","$remove","isEmpty","Object","keys","filter","startsWith","every","var","text","html"],"mappings":"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","file":"word.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc service\r\n * @name webdan.Word\r\n * @description\r\n * # Word\r\n * Factory in the webdan.\r\n */\r\nangular.module('webdan')\r\n  .factory('Word', ['webdanRef', '$firebaseArray', '$firebaseObject', '$firebaseUtils',\r\n    function(webdanRef, $firebaseArray, $firebaseObject, $firebaseUtils) {\r\n\r\n      let ref = webdanRef.child('words');\r\n      let words = $firebaseArray(ref);\r\n      let Word = {};\r\n\r\n      Word.validators = {\r\n        'en': /[A-Za-z0-9\\s]*/,\r\n        'var': {\r\n          'text': /[^<>]*/\r\n        }\r\n      };\r\n\r\n      Word.query = function(pageKey) {\r\n        if (pageKey) {\r\n          let query = ref.orderByChild('page').equalTo(pageKey);\r\n          return $firebaseArray(query);\r\n        }\r\n        return words;\r\n      }\r\n\r\n      Word.add = function(word) {\r\n        return words.$add(word)\r\n          .then(function(ref) {\r\n            word.$id = ref.key;\r\n          })\r\n          .catch(function(err) {\r\n            throw err;\r\n          });\r\n      }\r\n\r\n      Word.save = function(word) {\r\n        let origWord = words.$getRecord(word.$id);\r\n        let plainWord = $firebaseUtils.toJSON(word);\r\n        angular.extend(origWord, plainWord);\r\n        return words.$save(origWord)\r\n          .then(function(ref) {\r\n            ref;\r\n          })\r\n          .catch(function(err) {\r\n            throw err;\r\n          });\r\n      }\r\n\r\n      Word.update = function(key, prop, val) {\r\n        let path = key +'/'+ prop.replace('.', '/');\r\n        let propRef = ref.child(path);\r\n        let obj = $firebaseObject(propRef);\r\n        obj.$value = val;\r\n        return obj.$save().catch(function(err) {\r\n          throw err;\r\n        });\r\n      }\r\n\r\n      Word.remove = function(word) {\r\n        let origWord = words.$getRecord(word.$id);\r\n        return words.$remove(origWord).catch(function(err) {\r\n          throw err;\r\n        });\r\n      }\r\n\r\n      Word.isEmpty = function(word) {\r\n        return Object.keys(word).filter(function(prop) {\r\n          return !prop.startsWith('$');\r\n        }).every(function(prop) {\r\n          switch (prop) {\r\n            case 'page':\r\n              return true;\r\n            case 'var':\r\n              return !word.var.text && !word.var.html;\r\n            default:\r\n              return !word[prop];\r\n          }\r\n        });\r\n      }\r\n\r\n      return Word;\r\n    }\r\n  ]);\r\n"]}