{"version":3,"sources":["services/condition.js"],"names":["angular","module","factory","webdanRef","$firebaseArray","$firebaseObject","$firebaseUtils","ref","child","conditions","Condition","selectOptions","query","copy","remove","condition","origCondition","$getRecord","$id","$remove","catch","err","save","plainCondition","toJSON","extend","$save","add","$add","isEmpty","name","trim","forEach","renderName","instance","td","row","col","prop","conditionId","cellProperties","renderProp","element","html"],"mappings":"AAAA;;AAEA;;;;;;;;AAOAA,QAAQC,MAAR,CAAe,QAAf,EACGC,OADH,CACW,WADX,EACwB,CAAC,WAAD,EAAc,gBAAd,EAAgC,iBAAhC,EAAmD,gBAAnD,EACpB,UAASC,SAAT,EAAoBC,cAApB,EAAoCC,eAApC,EAAqDC,cAArD,EAAqE;;AAEnE,MAAIC,MAAMJ,UAAUK,KAAV,CAAgB,YAAhB,CAAV;AACA,MAAIC,aAAaL,eAAeG,GAAf,CAAjB;AACA,MAAIG,YAAY,EAAhB;AACA,MAAIC,sBAAJ;;AAEAD,YAAUE,KAAV,GAAkB,UAASC,IAAT,EAAe;AAC/B,WAAOJ,UAAP;AACD,GAFD;;AAIAC,YAAUI,MAAV,GAAmB,UAASC,SAAT,EAAoB;AACrC,QAAIC,gBAAgBP,WAAWQ,UAAX,CAAsBF,UAAUG,GAAhC,CAApB;AACA,WAAOT,WAAWU,OAAX,CAAmBH,aAAnB,EAAkCI,KAAlC,CAAwC,UAASC,GAAT,EAAc;AAC3D,YAAMA,GAAN;AACD,KAFM,CAAP;AAGD,GALD;;AAOAX,YAAUY,IAAV,GAAiB,UAASP,SAAT,EAAoB;AACnC,QAAIC,gBAAgBP,WAAWQ,UAAX,CAAsBF,UAAUG,GAAhC,CAApB;AACA,QAAIK,iBAAiBjB,eAAekB,MAAf,CAAsBT,SAAtB,CAArB;AACAf,YAAQyB,MAAR,CAAeT,aAAf,EAA8BO,cAA9B;AACA,WAAOd,WAAWiB,KAAX,CAAiBV,aAAjB,EAAgCI,KAAhC,CAAsC,UAASC,GAAT,EAAc;AACzD,YAAMA,GAAN;AACD,KAFM,CAAP;AAGD,GAPD;;AASAX,YAAUiB,GAAV,GAAgB,UAASZ,SAAT,EAAoB;AAClC,WAAON,WAAWmB,IAAX,CAAgBb,SAAhB,EAA2BK,KAA3B,CAAiC,UAASC,GAAT,EAAc;AACpD,YAAMA,GAAN;AACD,KAFM,CAAP;AAGD,GAJD;;AAMAX,YAAUmB,OAAV,GAAoB,UAASd,SAAT,EAAoB;AACtC,WAAO,CAACA,UAAUe,IAAV,CAAeC,IAAf,EAAR;AACD,GAFD;;AAIArB,YAAUC,aAAV,GAA0B,YAAW;AACnC,QAAI,CAACA,aAAL,EAAoB;AAClBA,sBAAgB,EAAhB;AACAF,iBAAWuB,OAAX,CAAmB,UAASjB,SAAT,EAAoB;AACrCJ,sBAAcI,UAAUG,GAAxB,IAA+BH,UAAUe,IAAzC;AACD,OAFD;AAGD;AACD,WAAOnB,aAAP;AACD,GARD;;AAUAD,YAAUuB,UAAV,GAAuB,UAASC,QAAT,EAAmBC,EAAnB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,WAAvC,EAAoDC,cAApD,EAAoE;AACzF,WAAOC,WAAWN,EAAX,EAAeI,WAAf,EAA4B,MAA5B,CAAP;AACD,GAFD;;AAIA,WAASE,UAAT,CAAoBN,EAApB,EAAwBI,WAAxB,EAAqCD,IAArC,EAA2C;AACzC,QAAIvB,YAAYN,WAAWQ,UAAX,CAAsBsB,WAAtB,CAAhB;AACA,QAAIxB,SAAJ,EAAe;AACbf,cAAQ0C,OAAR,CAAgBP,EAAhB,EAAoBQ,IAApB,CAAyB5B,UAAUuB,IAAV,KAAmB,EAA5C;AACD;AACD,WAAOH,EAAP;AACD;;AAED,SAAOzB,SAAP;AACD,CA7DmB,CADxB","file":"condition.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc service\r\n * @name webdan.Condition\r\n * @description\r\n * # Condition\r\n * Factory in the webdan.\r\n */\r\nangular.module('webdan')\r\n  .factory('Condition', ['webdanRef', '$firebaseArray', '$firebaseObject', '$firebaseUtils',\r\n    function(webdanRef, $firebaseArray, $firebaseObject, $firebaseUtils) {\r\n\r\n      let ref = webdanRef.child('conditions');\r\n      let conditions = $firebaseArray(ref);\r\n      let Condition = {};\r\n      let selectOptions;\r\n\r\n      Condition.query = function(copy) {\r\n        return conditions;\r\n      }\r\n\r\n      Condition.remove = function(condition) {\r\n        let origCondition = conditions.$getRecord(condition.$id);\r\n        return conditions.$remove(origCondition).catch(function(err) {\r\n          throw err;\r\n        });\r\n      }\r\n\r\n      Condition.save = function(condition) {\r\n        let origCondition = conditions.$getRecord(condition.$id);\r\n        let plainCondition = $firebaseUtils.toJSON(condition);\r\n        angular.extend(origCondition, plainCondition);\r\n        return conditions.$save(origCondition).catch(function(err) {\r\n          throw err;\r\n        });\r\n      }\r\n\r\n      Condition.add = function(condition) {\r\n        return conditions.$add(condition).catch(function(err) {\r\n          throw err;\r\n        });\r\n      }\r\n\r\n      Condition.isEmpty = function(condition) {\r\n        return !condition.name.trim();\r\n      }\r\n\r\n      Condition.selectOptions = function() {\r\n        if (!selectOptions) {\r\n          selectOptions = {};\r\n          conditions.forEach(function(condition) {\r\n            selectOptions[condition.$id] = condition.name;\r\n          });\r\n        }\r\n        return selectOptions;\r\n      }\r\n\r\n      Condition.renderName = function(instance, td, row, col, prop, conditionId, cellProperties) {\r\n        return renderProp(td, conditionId, 'name');\r\n      }\r\n\r\n      function renderProp(td, conditionId, prop) {\r\n        let condition = conditions.$getRecord(conditionId);\r\n        if (condition) {\r\n          angular.element(td).html(condition[prop] || '');\r\n        }\r\n        return td;\r\n      }\r\n\r\n      return Condition;\r\n    }\r\n  ]);\r\n"]}